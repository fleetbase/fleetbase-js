{"version":3,"file":"fleetbase.js","sources":["../../src/utils/array.js","../../src/utils/collection.js","../../src/utils/is-empty.js","../../src/utils/is-blank.js","../../src/utils/is-latitude.js","../../src/utils/is-longitude.js","../../src/utils/is-resource.js","../../src/utils/is-phone.js","../../src/utils/is-node-environment.js","../../src/utils/detect-adapter.js","../../src/utils/google-address.js","../../src/utils/point.js","../../src/utils/object.js","../../src/utils/store-actions.js","../../src/resource.js","../../src/resources/order.js","../../src/resources/payload.js","../../src/resources/entity.js","../../src/resources/place.js","../../src/resources/waypoint.js","../../src/resources/tracking-status.js","../../src/resources/vehicle.js","../../src/resources/driver.js","../../src/resources/vendor.js","../../src/resources/contact.js","../../src/resources/zone.js","../../src/resources/service-area.js","../../src/resources/service-rate.js","../../src/resources/service-quote.js","../../src/resources/organization.js","../../src/adapter.js","../../src/adapters/browser.js","../../src/adapters/node.js","../../src/adapters/ember.js","../../src/utils/string.js","../../src/resolver.js","../../src/store.js","../../src/fleetbase.js"],"sourcesContent":["const { isArray } = Array;\n\nexport {\n    isArray\n};\n","import { isArray } from './array';\n\n/**\n * Collection\n * Extended array inspired by Ember's NativeArray\n **/\n\nconst CHUNK_SIZE = 60000;\n\n// To avoid overflowing the stack, we splice up to CHUNK_SIZE items at a time.\n// See https://code.google.com/p/chromium/issues/detail?id=56588 for more details.\nconst replace = (array, start, deleteCount, items = []) => {\n    if (isArray(array)) {\n        if (items.length <= CHUNK_SIZE) {\n            array.splice(start, deleteCount, ...items);\n        } else {\n            array.splice(start, deleteCount);\n\n            for (let i = 0; i < items.length; i += CHUNK_SIZE) {\n                let chunk = items.slice(i, i + CHUNK_SIZE);\n                array.splice(start + i, 0, ...chunk);\n            }\n        }\n    } else if (isCollection(arr)) {\n        array.replace(start, deleteCount, items);\n    }\n};\n\nconst identityFunction = (item) => item;\n\nconst uniqBy = (array, key = identityFunction) => {\n    let ret = [];\n    let seen = new Set();\n    let getter = typeof key === 'function' ? key : (item) => get(item, key);\n\n    array.forEach((item) => {\n        let val = getter(item);\n        if (!seen.has(val)) {\n            seen.add(val);\n            ret.push(item);\n        }\n    });\n\n    return ret;\n};\n\nconst isCollection = (mixed) => mixed instanceof Collection;\n\nconst objectAt = (array, index) => {\n    if (isArray(array)) {\n        return array[index];\n    } else if (isCollection(array)) {\n        return array.objectAt(index);\n    }\n\n    return null;\n};\n\nconst iter = (key, value) => {\n    let valueProvided = arguments.length === 2;\n    return valueProvided ? (item) => value === item[key] : (item) => Boolean(item[key]);\n};\n\nconst findIndex = (array, predicate, startAt = 0) => {\n    let len = array.length;\n    for (let index = startAt; index < len; index++) {\n        let item = objectAt(array, index);\n        if (predicate(item, index, array)) {\n            return index;\n        }\n    }\n    return -1;\n};\n\nconst find = (array, callback, target) => {\n    let predicate = callback.bind(target);\n    let index = findIndex(array, predicate, 0);\n    return index === -1 ? undefined : objectAt(array, index);\n};\n\nconst any = (array, callback, target) => {\n    let predicate = callback.bind(target);\n    return findIndex(array, predicate, 0) !== -1;\n};\n\nconst every = (array, callback, target) => {\n    let cb = callback.bind(target);\n    let predicate = (item, index, array) => !cb(item, index, array);\n    return findIndex(array, predicate, 0) === -1;\n};\n\nconst indexOf = (array, val, startAt = 0, withNaNCheck) => {\n    let len = array.length;\n\n    if (startAt < 0) {\n        startAt += len;\n    }\n\n    // SameValueZero comparison (NaN !== NaN)\n    let predicate = withNaNCheck && val !== val ? (item) => item !== item : (item) => item === val;\n    return findIndex(array, predicate, startAt);\n};\n\nconst removeAt = (array, index, len = 1) => {\n    replace(array, index, len, []);\n    return array;\n};\n\nconst insertAt = (array, index, item) => {\n    replace(array, index, 0, [item]);\n    return item;\n};\n\nclass Collection extends Array {\n    constructor(...items) {\n        if (isArray(arguments[0])) {\n            super(...arguments[0]);\n        } else {\n            super(...arguments);\n        }\n    }\n\n    get notEmpty() {\n        return this.length > 0;\n    }\n\n    get empty() {\n        return this.length === 0;\n    }\n\n    get first() {\n        return objectAt(this, 0);\n    }\n\n    get last() {\n        return objectAt(this, this.length - 1);\n    }\n\n    replace(start, deleteCount, items = []) {\n        replace(this, start, deleteCount, items);\n\n        return this;\n    }\n\n    objectsAt(indexes) {\n        return indexes.map((idx) => objectAt(this, idx));\n    }\n\n    objectAt(index) {\n        return objectAt(this, index);\n    }\n\n    indexOf(object, startAt) {\n        return indexOf(this, object, startAt, false);\n    }\n\n    lastIndexOf(object, startAt) {\n        let len = this.length;\n\n        if (startAt === undefined || startAt >= len) {\n            startAt = len - 1;\n        }\n\n        if (startAt < 0) {\n            startAt += len;\n        }\n\n        for (let idx = startAt; idx >= 0; idx--) {\n            if (objectAt(this, idx) === object) {\n                return idx;\n            }\n        }\n\n        return -1;\n    }\n\n    includes(object, startAt) {\n        return indexOf(this, object, startAt, true) !== -1;\n    }\n\n    findBy() {\n        return find(this, iter(...arguments));\n    }\n\n    findIndexBy() {\n        return findIndex(this, iter(...arguments));\n    }\n\n    isEvery() {\n        return every(this, iter(...arguments));\n    }\n\n    isAny() {\n        return any(this, iter(...arguments));\n    }\n\n    invoke(methodName, ...args) {\n        let ret = [];\n\n        this.forEach((item) => ret.push(item[methodName]?.(...args)));\n\n        return ret;\n    }\n\n    toArray() {\n        return this.map((item) => item);\n    }\n\n    compact() {\n        return this.filter((value) => value != null);\n    }\n\n    sortBy() {\n        let sortKeys = arguments;\n\n        return this.sort((a, b) => {\n            for (let i = 0; i < sortKeys.length; i++) {\n                let key = sortKeys[i];\n                let propA = a[key];\n                let propB = b[key];\n                // return 1 or -1 else continue to the next sortKey\n                let compareValue = compare(propA, propB);\n\n                if (compareValue) {\n                    return compareValue;\n                }\n            }\n            return 0;\n        });\n    }\n\n    uniqBy(key) {\n        return uniqBy(this, key);\n    }\n\n    without(value) {\n        if (!this.includes(value)) {\n            return this; // nothing to do\n        }\n\n        // SameValueZero comparison (NaN !== NaN)\n        let predicate = value === value ? (item) => item !== value : (item) => item === item;\n        return this.filter(predicate);\n    }\n\n    clear() {\n        let len = this.length;\n        if (len === 0) {\n            return this;\n        }\n\n        this.replace(0, len, []);\n        return this;\n    }\n\n    insertAt(idx, object) {\n        insertAt(this, idx, object);\n        return this;\n    }\n\n    replaceAt(idx, object) {\n        return this.replace(idx, 1, [object]);\n    }\n\n    removeAt(start, len) {\n        return removeAt(this, start, len);\n    }\n\n    pushObject(obj) {\n        return this.insertAt(this.length, obj);\n    }\n\n    pushObjects(objects) {\n        this.replace(this.length, 0, objects);\n        return this;\n    }\n\n    popObject() {\n        let len = this.length;\n        if (len === 0) {\n            return null;\n        }\n\n        let ret = objectAt(this, len - 1);\n        this.removeAt(len - 1, 1);\n        return ret;\n    }\n\n    shiftObject() {\n        if (this.length === 0) {\n            return null;\n        }\n\n        let ret = objectAt(this, 0);\n        this.removeAt(0);\n        return ret;\n    }\n\n    unshiftObject(obj) {\n        return insertAt(this, 0, obj);\n    }\n\n    unshiftObjects(objects) {\n        this.replace(0, 0, objects);\n        return this;\n    }\n\n    reverseObjects() {\n        let len = this.length;\n        if (len === 0) {\n            return this;\n        }\n\n        let objects = this.toArray().reverse();\n        this.replace(0, len, objects);\n        return this;\n    }\n\n    setObjects(objects) {\n        if (objects.length === 0) {\n            return this.clear();\n        }\n\n        let len = this.length;\n        this.replace(0, len, objects);\n        return this;\n    }\n\n    removeObject(obj) {\n        let loc = this.length || 0;\n        while (--loc >= 0) {\n            let curObject = objectAt(this, loc);\n\n            if (curObject === obj) {\n                this.removeAt(loc);\n            }\n        }\n        return this;\n    }\n\n    removeObjects(objects) {\n        for (let i = objects.length - 1; i >= 0; i--) {\n            this.removeObject(objects[i]);\n        }\n\n        return this;\n    }\n\n    addObject(obj) {\n        let included = this.includes(obj);\n\n        if (!included) {\n            this.pushObject(obj);\n        }\n\n        return this;\n    }\n\n    addObjects(objects) {\n        objects.forEach((obj) => this.addObject(obj));\n        return this;\n    }\n}\n\nexport default Collection;\n\nexport { replace, uniqBy, isCollection, objectAt, iter, findIndex, find, any, every, indexOf, removeAt, insertAt };\n","const isEmpty = (obj) => {\n    const none = obj === null || obj === undefined;\n    if (none) {\n        return none;\n    }\n\n    if (typeof obj.size === 'number') {\n        return !obj.size;\n    }\n\n    const objectType = typeof obj;\n\n    if (objectType === 'object') {\n        const { size } = obj;\n        if (typeof size === 'number') {\n            return !size;\n        }\n    }\n\n    if (typeof obj.length === 'number' && objectType !== 'function') {\n        return !obj.length;\n    }\n\n    if (objectType === 'object') {\n        const { length } = obj;\n        if (typeof length === 'number') {\n            return !length;\n        }\n    }\n\n    return false;\n};\n\nexport default isEmpty;\n","import isEmpty from './is-empty';\n\nconst isBlank = (obj) => isEmpty(obj) || (typeof obj === 'string' && /\\S/.test(obj) === false);\n\nexport default isBlank;\n","export default function isLatitude(coordinate) {\n    return isFinite(coordinate) && Math.abs(coordinate) <= 90;\n}\n","export default function isLongitude(coordinate) {\n    return isFinite(coordinate) && Math.abs(coordinate) <= 180 && Math.abs(coordinate) >= 90;\n}\n","import Resource from '../resource';\n\nexport default function isResource(record) {\n    return record instanceof Resource;\n}\n","const isPhone = (phone = '') => {\n    return /^[+]?[\\s./0-9]*[(]?[0-9]{1,4}[)]?[-\\s./0-9]*$/g.test(phone);\n}\n\nexport default isPhone;","/**\n * Determines if environment SDK is initialized in is Node, additionally checks pass if environment is ReactNative.\n * \n * @returns boolean\n */\nconst isNodeEnvironment = () => {\n    return (typeof process !== 'undefined') && (typeof process?.env === 'object' || process.release?.name?.search(/node|io.js/) !== -1) && (typeof window === 'undefined' || window?.navigator?.product === 'ReactNative');\n};\n\nexport default isNodeEnvironment;","import { lookup } from '../resolver';\nimport isNodeEnvironment from './is-node-environment';\n\nconst detectAdapter = (options = {}) => {\n    if (isNodeEnvironment()) {\n        return lookup('adapter', 'NodeAdapter', options);\n    }\n\n    return lookup('adapter', 'BrowserAdapter', options);\n}\n\nexport default detectAdapter;","const { isArray } = Array;\n\nclass GoogleAddress {\n    constructor(place) {\n        this.place = place;\n        this.geometry = place?.geometry;\n        this.components = this.parseComponents();\n        this.attributes = this.parseProperties();\n    }\n\n    parse() {\n        this.parseComponents();\n        this.parseProperties();\n    }\n\n    parseComponents() {\n        const components = (this.place?.address_components || []).reduce(function (acc, data) {\n            data.types.forEach(function (type) {\n                acc[type] = data;\n            });\n            return acc;\n        }, {});\n\n        return components;\n    }\n\n    parseProperties() {\n        const attributes = {\n            streetNumber: this.get('street_number'),\n            streetName: this.get('route'),\n            coordinates: this.geometry?.location ? Object.values(this.geometry.location) : [0, 0],\n            city: this.or(['locality', 'sublocality', 'sublocality_level_1', 'neighborhood', 'administrative_area_level_3', 'administrative_area_level_2']),\n            county: this.get('administrative_area_level_2'),\n            stateShort: this.get('administrative_area_level_1', true),\n            stateLong: this.get('administrative_area_level_1'),\n            countryShort: this.get('country', true),\n            country: this.get('country', true),\n            countryLong: this.get('country'),\n            postalCode: this.get('postal_code'),\n        };\n\n        attributes.address = [attributes.streetNumber, attributes.streetName].filter(Boolean).join(' ');\n\n        return attributes;\n    }\n\n    all() {\n        return this.attributes;\n    }\n\n    or(keys = []) {\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n\n            if (isArray(key)) {\n                const pkey = key[0];\n                const short = key[1];\n\n                if (this.has(pkey)) {\n                    return this.get(pkey, short);\n                }\n\n                continue;\n            }\n\n            if (this.has(key)) {\n                return this.get(key);\n            }\n        }\n\n        return null;\n    }\n\n    has(key) {\n        return (key in this.components);\n    }\n\n    get(key, short = false) {\n        if (!(key in this.components)) {\n            return null;\n        }\n\n        return short ? this.components[key].short_name : this.components[key].long_name;\n    }\n\n    setAttributes(attributes = {}) {\n        this.attributes = {...this.attributes, ...attributes};\n\n        return this;\n    }\n\n    setAttribute(key, value) {\n        this.attributes[key] = value;\n\n        return this;\n    }\n\n    getAttribute(key) {\n        return this.attributes[key] || null;\n    }\n}\n\nexport default GoogleAddress;\n","export default class Point {\n    constructor(latitude = 0, longitude = 0) {\n        this.type = 'Point';\n        this.coordinates = [longitude, latitude];\n    }\n\n    get latitude() {\n        return this.coordinates[1];\n    }\n\n    get longitude() {\n        return this.coordinates[0];\n    }\n\n    lat() {\n        return this.latitude;\n    }\n\n    lng() {\n        return this.longitude;\n    }\n\n    static fromGeoJson(json) {\n        [ longitude, latitude ] = json.coordinates;\n\n        return new Point(latitude, longitude);\n    }\n\n    serialize() {\n        return {\n            type: 'Point',\n            coorindates: [this.lat(), this.lng()]\n        };\n    }\n\n    toJson() {\n        return this.serialize();\n    }\n\n    toString() {\n        return `(${this.latitude}, ${this.longitude})`;\n    }\n}","import isEmpty from './is-empty';\n\nconst isResource = (mixed) => typeof mixed === 'object' && !isEmpty(mixed?.attributes) && typeof mixed?.attributes === 'object';\n\nconst isCallable = (object, property) => typeof object[property] === 'function';\n\nconst getResolved = (func, path) => {\n    const resolved = func();\n    return Array.isArray(resolved) || typeof resolved === 'object' ? get(resolved, path) : null;\n};\n\nconst invoke = (object, method) => {\n    if (typeof object[method] === 'function') {\n        return object[method].bind(object);\n    }\n};\n\nconst get = (object, path) => {\n    let current = object;\n\n    const type = typeof object;\n    const isObject = type === 'object';\n    const isFunction = type === 'function';\n    const isArray = Array.isArray(object);\n\n    const pathType = typeof path;\n    const pathIsString = pathType === 'string';\n    const pathIsDotted = pathIsString && path.includes('.');\n    const pathArray = pathIsDotted ? path.split('.') : [path];\n\n    if (isArray || isObject) {\n        for (let i = 0; i < pathArray.length; i++) {\n            if (current && current[pathArray[i]] === undefined) {\n                return null;\n            } else if (current) {\n                current = current[pathArray[i]];\n\n                // if is resource then return get on it's attributes\n                if (isResource(current) && pathArray[i + 1] !== undefined) {\n                    const newPath = pathArray.slice(i + 1).join('.');\n\n                    return get(current.attributes, newPath);\n                }\n\n                // resolve functions and continue\n                if (typeof current === 'function') {\n                    const newPath = pathArray.slice(i + 1).join('.');\n                    return getResolved(current, newPath);\n                }\n            }\n        }\n        return current;\n    }\n\n    if (isFunction) {\n        return getResolved(object, path);\n    }\n};\n\nconst getProperties = (object, properties = []) => {\n    const selected = {};\n    let propertyNames = arguments;\n    let i = 1;\n\n    if (arguments.length === 2 && Array.isArray(properties)) {\n        i = 0;\n        propertyNames = arguments[1];\n    }\n\n    for (; i < propertyNames.length; i++) {\n        selected[propertyNames[i]] = get(object, propertyNames[i]);\n    }\n\n    return selected;\n};\n\nconst set = (object, path, value) => {\n    let current = object;\n    const type = typeof object;\n    const isObject = type === 'object';\n    const isFunction = type === 'function';\n    const isArray = Array.isArray(object);\n\n    // if is function\n    if (isFunction) {\n        // throw error should be object or array or object like\n    }\n\n    const pathType = typeof path;\n    const pathIsString = pathType === 'string';\n    const pathIsDotted = pathIsString && path.includes('.');\n    const pathArray = pathIsDotted ? path.split('.') : [path];\n    const iterations = pathArray.length;\n\n    if (isArray || isObject) {\n        for (let i = 0; i < iterations - 1; i++) {\n            if (!current[pathArray[i]]) {\n                current[pathArray[i]] = {};\n            }\n            current = current[pathArray[i]];\n        }\n\n        current[pathArray[iterations - 1]] = value;\n    }\n\n    return value;\n};\n\nconst setProperties = (object, properties = {}) => {\n    for (const property in properties) {\n        set(object, property, properties[property]);\n    }\n\n    return object;\n};\n\nconst extend = (target, classes = []) => {\n    if (arguments.length > 1) {\n        classes = arguments;\n    }\n    for (let index = 0; index < classes.length; index++) {\n        for (const property in classes[index]) {\n            if (Object.prototype.hasOwnProperty.call(classes[index], property)) {\n                target[property] = classes[index][property];\n            }\n        }\n    }\n    return target;\n};\n\nexport { set, get, getProperties, setProperties, extend, isCallable, invoke };\n","import { set } from './object';\n\nexport default class StoreActions {\n    constructor(actions = {}, bind = null) {\n        this.actions = actions;\n        this.bind = bind;\n    }\n\n    extend(bindTo = null) {\n        const binding = bindTo || this.bind;\n\n        if (!binding) {\n            return this;\n        }\n\n        if (this?.actions && typeof this.actions === 'object') {\n            for (let action in this.actions) {\n                const fn = this.actions[action];\n\n                if (typeof fn !== 'function') {\n                    set(binding, action, fn);\n                    continue;\n                }\n\n                set(binding, action, fn.bind(binding));\n            }\n        }\n\n        return this;\n    }\n}\n","import Store from './store';\nimport { isEmpty } from './utils';\nimport { isArray } from './utils/array';\nimport { set, get } from './utils/object';\n\nclass Resource {\n    /**\n\t * The base resource for all resources\n\n\t * @return {[type]} [description]\n\t */\n    constructor(attributes = {}, adapter, resource, options = {}) {\n        this.attributes = attributes;\n        this.dirtyAttributes = {};\n        this.changes = {};\n        this.isLoading = false;\n        this.isSaving = false;\n        this.isDestroying = false;\n        this.isReloading = false;\n        this.resource = resource;\n        this.options = options;\n        this.version = options.version || 'v1';\n        this.setAdapter(adapter);\n    }\n\n    /**\n     * Set a new adapter to the resource instance, this will update the Store instance\n     *\n     * @param {Adapter} adapter\n     * @return {Resource} this\n     */\n    setAdapter(adapter) {\n        this.adapter = adapter;\n        this.store = new Store(this.resource, adapter, {\n            onAfterFetch: this.syncAttributes.bind(this),\n            actions: this.options?.actions\n        });\n\n        return this;\n    }\n\n    /**\n     * Getter for id attribute\n     *\n     * @var {String}\n     */\n    get id() {\n        return this.getAttribute('id');\n    }\n\n    /**\n     * Creates a new resource on the server\n     *\n     * @param  {Object} payload [description]\n     * @return {[type]}         [description]\n     */\n    create(attributes = {}) {\n        const data = this.mergeAttributes(attributes);\n        this.setFlags(['isLoading', 'isSaving']);\n\n        return this.store.create(data).then((response) => {\n           this.setFlags(['isLoading', 'isSaving'], false);\n\n           return response;\n        });\n    }\n\n    /**\n     * Creates a new resource on the server\n     *\n     * @param  {Object} payload [description]\n     * @return {[type]}         [description]\n     */\n    update(attributes = {}) {\n        this.setFlags(['isLoading', 'isSaving']);\n\n        return this.store.update(this.attributes.id, attributes).then((response) => {\n           this.setFlags(['isLoading', 'isSaving'], false);\n\n           return response;\n        });\n    }\n\n    /**\n     * Deletes the resource instance on the server\n     *\n     * @return {[type]} [description]\n     */\n    destroy() {\n        this.setFlags(['isLoading', 'isDestroying']);\n\n        return this.store.destroy(this.attributes.id).then((response) => {\n           this.setFlags(['isLoading', 'isDestroying'], false);\n\n           return response;\n        });\n    }\n\n    /**\n     * Reloads the resource from the server.\n     *\n     * @return {[type]} [description]\n     */\n    reload() {\n        this.setFlags(['isLoading', 'isReloading']);\n\n        return this.store.findRecord(this.attributes.id).then((response) => {\n           this.reset();\n\n           return response;\n        });\n    }\n\n    /**\n     * Sets flag properties.\n     *\n     * @return this\n     */\n    setFlags(flags = [], state = true) {\n        const validFlags = ['isLoading', 'isSaving', 'isReloading', 'isDestroying'];\n\n        for(let i = 0; i < flags.length; i++) {\n            const flag = flags[i];\n\n            if (typeof flag !== 'string' || !validFlags.includes(flag)) {\n                throw new Error(`${flag} is not a valid flag!`);\n            }\n\n            this[flag] = state;\n        }\n\n        return this;\n    }\n\n    /**\n     * Resets tracked properties\n     *\n     * @return this\n     */\n    reset() {\n        this.dirtyAttributes = {};\n        this.changes = {};\n        this.isLoading = false;\n        this.isSaving = false;\n        this.isReloading = false;\n\n        return this;\n    }\n\n    /**\n     * Emptys resource.\n     *\n     * @return this\n     */\n    empty() {\n        this.reset();\n        this.attribues = {};\n\n        return this;\n    }\n\n    /**\n     * Saves the resource instance on the server\n     *\n     * @return {[type]} [description]\n     */\n    save(options = {}) {\n        const attributes = this.getAttributes();\n\n        if (isEmpty(this.id)) {\n            return this.create(attributes);\n        }\n\n        if (options.onlyDirty === true) {\n            return this.savedirty();\n        }\n\n        return this.update(attributes);\n    }\n\n    /**\n     * Saves only dirtied attributes.\n     *\n     * @return {[type]} [description]\n     */\n    saveDirty() {\n        const dirtyAttributeKeys = Object.keys(this.dirtyAttributes);\n        const dirtyAttributes = {};\n\n        for (let i = 0; i < dirtyAttributeKeys.length; i++) {\n            const key = dirtyAttributeKeys[i];\n            dirtyAttributes[key] = this.getAttribute(key);\n        }\n\n        return this.update(dirtyAttributes);\n    }\n\n    /**\n     * Returns the resource meta if exists.\n     *\n     * @return {Object}\n     */\n    get meta() {\n        return this.getAttribute('meta', {});\n    }\n\n    /**\n     * Returns the date instance resource was created.\n     *\n     * @return {Date}\n     */\n    get createdAt() {\n        return this.isAttributeFilled('created_at') ? new Date(this.getAttribute('created_at')) : null;\n    }\n\n    /**\n     * Returns the date instance resource was created.\n     *\n     * @return {Date}\n     */\n    get updatedAt() {\n        return this.isAttributeFilled('updated_at') ? new Date(this.getAttribute('updated_at')) : null;\n    }\n\n    /**\n     * Checks if resource is loaded from the server.\n     *\n     * @return {Boolean}\n     */\n    get isLoaded() {\n        return this.hasAttributes(['created_at', 'id']);\n    }\n\n    /**\n     * Checks if resource ihas no attributes\n     *\n     * @return {Boolean}\n     */\n    get isEmpty() {\n        return Object.values(this?.attributes).length === 0;\n    }\n\n    /**\n     * Checks if resource is not saved to server.\n     *\n     * @return {Boolean}\n     */\n    get isNew() {\n        return !this.id;\n    }\n\n    /**\n     * Checks if resource is not saved to server.\n     *\n     * @return {Boolean}\n     */\n    get isSaved() {\n        return !this.isNew && this.isLoaded;\n    }\n\n    /**\n     * Checks if resource is deleted on server.\n     *\n     * @return {Boolean}\n     */\n    get isDeleted() {\n        return this.hasAttributes(['deleted', 'time']);\n    }\n\n    /**\n     * Iterates over each attribute value and property executing a user supplied callback.\n     *\n     * @return {Object}\n     */\n    eachAttribute(callback) {\n        if (typeof callback !== 'function') {\n            return this;\n        }\n\n        Object.keys(this?.attributes ?? {}).forEach((property) => {\n            const value = this.getAttribute(property);\n            callback.call(this, value, property);\n        });\n\n        return this;\n    }\n\n    /**\n     * Gets all changes\n     *\n     * @return {Object}\n     */\n    changes() {\n        return this.changes;\n    }\n\n    /**\n     * Gets all dirty attributes.\n     *\n     * @return {Object}\n     */\n    getDirtyAttributes() {\n        return this.dirtyAttributes;\n    }\n\n    /**\n     * Checks if property is dirty.\n     *\n     * @param {String} property [description]\n     * @return {Boolean}\n     */\n    isDirty(property) {\n        return property in this.dirtyAttributes;\n    }\n\n    /**\n     * Checks if any properties is dirty.\n     *\n     * @return {Boolean}\n     */\n    hasDirtyAttributes() {\n        return Object.keys(this?.dirtyAttributes ?? {}).length > 0;\n    }\n\n    /**\n     * Updates a instance property without tracking changes or dirtying attribute.\n     *\n     * @param {String} property [description]\n     * @param {mixed} value   [description]\n     */\n    mutate(property, value) {\n        this.attributes[property] = value;\n    }\n\n    /**\n     * Set an instance property locally\n     *\n     * @param {String} property [description]\n     * @param {mixed} value   [description]\n     */\n    setAttribute(property, value = null) {\n        if (value === null && typeof property === 'object') {\n            return this.setAttributes(property);\n        }\n\n        const previousValue = this?.attributes[property] ?? null;\n\n        // use object setter\n        set(this.attributes, property, value);\n        set(this.dirtyAttributes, property, previousValue);\n        \n        // this.attributes[property] = value;\n        // this.dirtyAttributes[property] = previousValue;\n\n        // track changes\n        if (!isArray(this?.changes[property])) {\n            this.changes[property] = [];\n        }\n\n        this.changes[property].push({\n            property,\n            previousValue,\n            value,\n            changedAt: new Date(),\n        });\n\n        return this;\n    }\n\n    /**\n     * Set multiple instance properties locally\n     *\n     * @param {Object} properties [description]\n     */\n    setAttributes(attributes = {}) {\n        for (let property in attributes) {\n            this.setAttribute(property, attributes[property]);\n        }\n\n        return this;\n    }\n\n    /**\n     * Get an attribute\n     *\n     * @param {String} attribute     The attribute key to get\n     * @param {mixed}  defaultValue  The default value if no attribute value\n     */\n    getAttribute(attribute, defaultValue = null) {\n        const value = get(this?.attributes ?? {}, attribute);\n\n        if (value === undefined) {\n            return defaultValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * Checks if attribute exists.\n     *\n     * @param {String} property [description]\n     * @return {Boolean}\n     */\n    hasAttribute(property) {\n        if (isArray(property)) {\n            const properties = property;\n            const attributeKeys = Object.keys(this.attributes ?? {});\n            \n            return properties.every((prop) => attributeKeys.includes(prop));\n        }\n\n        if (!this?.attributes) {\n            return false;\n        }\n\n        return property in this.attributes;\n    }\n\n    /**\n     * Alias for checking if has multiple attributes.\n     *\n     * @param {Array} properties \n     * @return {Boolean}\n     */\n    hasAttributes(properties = []) {\n        return this.hasAttribute(properties);\n    }\n\n    /**\n     * Returns true if attribute has value.\n     *\n     * @param {Array} properties \n     * @return {Boolean}\n     */\n    isAttributeFilled(property) {\n        if (isArray(property)) {\n            return this.hasAttribute(property) && property.every((prop) => !isEmpty(this.getAttribute(prop)));\n        }\n\n        return this.hasAttribute(property) && !isEmpty(this.getAttribute(property));\n    }\n\n    /**\n     * Get multiple attributes.\n     *\n     * @param {Array} properties [description]\n     * @param {[type]} value   [description]\n     */\n    getAttributes(properties) {\n        const attributes = {};\n\n        if (properties === null || properties === undefined) {\n            return this.getAttributes(Object.keys(this.attributes));\n        }\n\n        if (typeof properties === 'string') {\n            return this.getAttribute([...arguments]);\n        }\n\n        if (!isArray(properties)) {\n            throw new Error('No attribute properties provided!');\n        }\n\n        for (let i = 0; i < properties.length; i++) {\n            const property = properties[i];\n\n            if (typeof property !== 'string') {\n                continue;\n            }\n\n            let value = this.getAttribute(property);\n\n            if (typeof value?.attributes === 'object' && !isArray(value?.attributes)) {\n                value = value.attributes;\n            }\n\n            attributes[property] = value;\n        }\n\n        return attributes;\n    }\n\n    /**\n     * Serialize resource to a POJO\n     *\n     * @returns {Object}\n     */\n    serialize() {\n        return this.getAttributes();\n    }\n\n    /**\n     * Merge and return attributes on the resource instance.\n     *\n     * @param {[type]} property [description]\n     * @param {[type]} value   [description]\n     */\n    mergeAttributes(attributes = {}) {\n        const modelAttributes = this?.attributes ?? {};\n        this.attributes = { ...modelAttributes, ...attributes };\n\n        return this.attributes;\n    }\n\n    /**\n     * Merge and return attributes on the resource instance.\n     *\n     * @param {[type]} property [description]\n     * @param {[type]} value   [description]\n     */\n    syncAttributes(json = {}) {\n        this.attributes = json;\n    }\n}\n\nexport default Resource;\n","import Resource from '../resource';\nimport { StoreActions, isResource } from '../utils';\nimport { isValid as isValidDate } from 'date-fns';\n\nconst orderActions = new StoreActions({\n    getDistanceAndTime: function (id, params = {}, options = {}) {\n        return this.adapter.get(`${this.namespace}/${id}/distance-and-time`, params, options);\n    },\n\n    getNextActivity: function (id, params = {}, options = {}) {\n        return this.adapter.get(`${this.namespace}/${id}/next-activity`, params, options);\n    },\n\n    dispatch: function (id, params = {}, options = {}) {\n        return this.adapter.post(`${this.namespace}/${id}/dispatch`, params, options).then(this.afterFetch.bind(this));\n    },\n\n    start: function (id, params = {}, options = {}) {\n        return this.adapter.post(`${this.namespace}/${id}/start`, params, options).then(this.afterFetch.bind(this));\n    },\n\n    updateActivity: function (id, params = {}, options = {}) {\n        return this.adapter.post(`${this.namespace}/${id}/update-activity`, params, options).then(this.afterFetch.bind(this));\n    },\n\n    setDestination: function (id, destinationId, params = {}, options = {}) {\n        if (isResource(destinationId)) {\n            destinationId = destinationId.id;\n        }\n\n        return this.adapter.post(`${this.namespace}/${id}/set-destination/${destinationId}`, params, options).then(this.afterFetch.bind(this));\n    },\n\n    captureQrCode: function (id, subjectId = null, params = {}, options = {}) {\n        if (isResource(subjectId)) {\n            subjectId = subjectId.id;\n        }\n\n        return this.adapter.post(`${this.namespace}/${id}/capture-qr${!subjectId ? '' : '/' + subjectId}`, params, options);\n    },\n\n    captureSignature: function (id, subjectId = null, params = {}, options = {}) {\n        if (isResource(subjectId)) {\n            subjectId = subjectId.id;\n        }\n\n        return this.adapter.post(`${this.namespace}/${id}/capture-signature${!subjectId ? '' : '/' + subjectId}`, params, options);\n    },\n\n    complete: function (id, params = {}, options = {}) {\n        return this.adapter.post(`${this.namespace}/${id}/complete`, params, options).then(this.afterFetch.bind(this));\n    },\n\n    cancel: function (id, params = {}, options = {}) {\n        return this.adapter.delete(`${this.namespace}/${id}/cancel`, params, options).then(this.afterFetch.bind(this));\n    },\n});\n\nclass Order extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'order', { actions: orderActions, ...options });\n    }\n\n    getDistanceAndTime(params = {}, options = {}) {\n        return this.store.getDistanceAndTime(this.id, params, options);\n    }\n\n    dispatch(params = {}, options = {}) {\n        return this.store.dispatch(this.id, params, options);\n    }\n\n    start(params = {}, options = {}) {\n        return this.store.start(this.id, params, options);\n    }\n\n    setDestination(destinationId, params = {}, options = {}) {\n        return this.store.setDestination(this.id, destinationId, params, options);\n    }\n\n    captureQrCode(subjectId = null, params = {}, options = {}) {\n        return this.store.captureQrCode(this.id, subjectId, params, options);\n    }\n\n    captureSignature(subjectId = null, params = {}, options = {}) {\n        return this.store.captureSignature(this.id, subjectId, params, options);\n    }\n\n    getNextActivity(params = {}, options = {}) {\n        return this.store.getNextActivity(this.id, params, options);\n    }\n\n    updateActivity(params = {}, options = {}) {\n        return this.store.updateActivity(this.id, params, options);\n    }\n\n    cancel(params = {}, options = {}) {\n        return this.store.cancel(this.id, params, options);\n    }\n\n    complete(params = {}, options = {}) {\n        return this.store.complete(this.id, params, options);\n    }\n\n    get isDispatched() {\n        return this.getAttribute('dispatched_at') !== null;\n    }\n\n    get isNotDispatched() {\n        return this.getAttribute('dispatched_at') == null;\n    }\n\n    get isStarted() {\n        return this.getAttribute('started_at') !== null;\n    }\n\n    get isNotStarted() {\n        return this.getAttribute('started_at') == null;\n    }\n\n    get isCompleted() {\n        return this.getAttribute('status') == 'completed';\n    }\n\n    get isCanceled() {\n        return this.getAttribute('status') == 'canceled';\n    }\n\n    get isEnroute() {\n        return this.getAttribute('status') == 'driver_enroute' || this.getAttribute('status') === 'enroute';\n    }\n\n    get isInProgress() {\n        return this.isStarted && !this.isCanceled && !this.isCompleted;\n    }\n\n    get scheduledAt() {\n        return this.isAttributeFilled('scheduled_at') ? new Date(this.getAttribute('scheduled_at')) : null;\n    }\n\n    get startedAt() {\n        return this.isAttributeFilled('started_at') ? new Date(this.getAttribute('started_at')) : null;\n    }\n\n    get dispatchedAt() {\n        return this.isAttributeFilled('dispatched_at') ? new Date(this.getAttribute('dispatched_at')) : null;\n    }\n\n    get status() {\n        return this.getAttribute('status');\n    }\n}\n\nexport default Order;\n\nexport { orderActions };\n","import Resource from '../resource';\nimport Collection from '../utils/collection';\n\nclass Payload extends Resource {\n\tconstructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'payload', options);\n    }\n\t\n    /**\n\t * Attaches an entity to an existing payload and returns\n\t * the payload with the entity attached\n\t *\n\t * @param  {[type]} Entity entity        [description]\n\t * @return {[type]}        [description]\n\t */\n    attach(entity) {\n        // perform op return payload\n    }\n\n    /**\n\t * Returns all of the entities attached to this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get entities() {\n\n    }\n\n    /**\n\t * Returns the dropoff for this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get dropoff() {\n\n    }\n\n    /**\n\t * Returns the pickup for this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get pickup() {\n\n    }\n\n    /**\n\t * Returns all the waypoints for this payload\n\t *\n\t * @return {[type]} [description]\n\t */\n    get waypoints() {\n        return new Collection(this.waypoints);\n    }\n}\n\nexport default Payload;\n","import Resource from '../resource';\n\nclass Entity extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'entity', options);\n    }\n}\n\nexport default Entity;\n","import Resource from '../resource';\nimport { isResource, Point } from '../utils';\n\nclass Place extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'place', options);\n    }\n\n    static fromGoogleAddress(googleAddress, adapter, options = {}) {\n        const [ latitude, longitude ] = googleAddress.getAttribute('coordinates');\n        const attributes = {\n            name: null,\n            address: googleAddress.getAttribute('address'),\n            location: new Point(latitude, longitude),\n            street1: googleAddress.getAttribute('address'),\n            street2: null,\n            city: googleAddress.getAttribute('city'),\n            province: googleAddress.getAttribute('stateLong'),\n            postal_code: googleAddress.getAttribute('postalCode'),\n            neighborhood: googleAddress.get('neighborhood'),\n            district: googleAddress.getAttribute('county'),\n            building: googleAddress.get('building'),\n            country: googleAddress.getAttribute('countryShort'),\n            phone: null,\n            security_access_code: null\n        };\n\n        return new Place(attributes, adapter, options);\n    }\n\n    /**\n     * The latitude coordinate for the 'Place' location.\n     * \n     * @var {Integer}\n     */\n    get latitude() {\n        return this.getAttribute('location', new Point())?.coordinates[1];\n    }\n\n    /**\n     * The longitude coordinate for the 'Place' location.\n     * \n     * @var {Integer}\n     */\n    get longitude() {\n        return this.getAttribute('location', new Point())?.coordinates[0];\n    }\n\n    /**\n     * Array coordinate pair for Place location.\n     * \n     * @var {Array}\n     */\n    get coordinates() {\n        const { latitude, longitude } = this;\n\n        return  [ latitude, longitude ];\n    }\n\n    /**\n     * Set the owner of the place.\n     * \n     * @param {Object|String} owner\n     * @return {Place}\n     */\n    setOwner(owner) {\n        if (isResource(owner)) {\n            this.setAttribute('owner', owner.id);\n        }\n\n        if (typeof owner === 'string') {\n            this.setAttribute('owner', owner);\n        }\n\n        return this;\n    }\n}\n\nexport default Place;\n","import Place from './place';\n\nclass Waypoint extends Place {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'waypoint', options);\n    }\n}\n\nexport default Waypoint;\n","import Resource from '../resource';\n\nclass TrackingStatus extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'tracking-status', options);\n    }\n}\n\nexport default TrackingStatus;\n","import Resource from '../resource';\n\nclass Vehicle extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'vehicle', options);\n    }\n}\n\nexport default Vehicle;\n","import Resource from '../resource';\nimport { StoreActions, isPhone, isEmail, Point } from '../utils';\n\nconst driverActions = new StoreActions({\n    // const { error } = await fleetbase.drivers.login('+1 111-1111');\n    login: function (identity, password = null, attributes = {}) {\n        // handle phone number authentication\n        if (isPhone(identity)) {\n            return this.adapter.post('drivers/login-with-sms', { phone: identity });\n        }\n\n        if (!password) {\n            throw new Error('Login requires password!');\n        }\n\n        return this.adapter.post('drivers/login', { identity, password, ...attributes }).then(this.afterFetch.bind(this));\n    },\n\n    verifyCode: function (identity, code, attributes = {}) {\n        return this.adapter.post('drivers/verify-code', { identity, code, ...attributes }).then(this.afterFetch.bind(this));\n    },\n\n    track: function (id, params = {}, options = {}) {\n        return this.adapter.post(`drivers/${id}/track`, params, options).then(this.afterFetch.bind(this));\n    },\n\n    retrieve: function (id) {\n        return this.findRecord(id);\n    },\n\n    syncDevice(id, params = {}, options = {}) {\n        return this.adapter.post(`drivers/${id}/register-device`, params, options);\n    },\n});\n\nclass Driver extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'driver', { actions: driverActions, ...options });\n    }\n\n    get token() {\n        return this.getAttribute('token');\n    }\n\n    get isOnline() {\n        return this.getAttribute('online') === true;\n    }\n\n    /**\n     * The latitude coordinate for the 'Place' location.\n     *\n     * @var {Integer}\n     */\n    get latitude() {\n        return this.getAttribute('location', new Point())?.coordinates[1];\n    }\n\n    /**\n     * The longitude coordinate for the 'Place' location.\n     *\n     * @var {Integer}\n     */\n    get longitude() {\n        return this.getAttribute('location', new Point())?.coordinates[0];\n    }\n\n    /**\n     * Array coordinate pair for Place location.\n     *\n     * @var {Array}\n     */\n    get coordinates() {\n        const { latitude, longitude } = this;\n\n        return [latitude, longitude];\n    }\n\n    get token() {\n        return this.getAttribute('token');\n    }\n\n    get isOnline() {\n        return this.getAttribute('online') === true;\n    }\n\n    track(params = {}, options = {}) {\n        return this.store.track(this.id, params, options);\n    }\n\n    syncDevice(params = {}, options = {}) {\n        return this.store.syncDevice(this.id, params, options);\n    }\n}\n\nexport default Driver;\nexport { driverActions };\n","import Resource from '../resource';\n\nclass Vendor extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'vendor', options);\n    }\n}\n\nexport default Vendor;\n","import Resource from '../resource';\n\nclass Contact extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'contact', options);\n    }\n}\n\nexport default Contact;\n","import Resource from '../resource';\n\nclass Zone extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'zone', options);\n    }\n}\n\nexport default Zone;\n","import Resource from '../resource';\n\nclass ServiceArea extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'service-area', options);\n    }\n}\n\nexport default ServiceArea;\n","import Resource from '../resource';\n\nclass ServiceRate extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'service-rate', options);\n    }\n}\n\nexport default ServiceRate;\n","import Resource from '../resource';\n\nclass ServiceQuote extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'service-quote', options);\n    }\n\n    fromPreliminary() {\n\n    }\n\n    fromPayload() {\n        \n    }\n}\n\nexport default ServiceQuote;\n","import Resource from '../resource';\n\nclass Organization extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'organization', options);\n    }\n}\n\nexport default Organization;\n","class Adapter {\n    /**\n\t * Creates a configured base adapter for Fleetbase.\n\t *\n\t * @param  {Object} config Configuration options for adapter\n\t */\n    constructor(config = {}) {\n        this.version = config.version || 'v1';\n        this.host = config.host || null;\n        this.namespace = config.namespace || null;\n        this.headers = config.headers || {};\n    }\n}\n\nexport default Adapter;\n","import Adapter from '../adapter';\nimport { isBlank } from '../utils';\n\nclass BrowserAdapter extends Adapter {\n    /**\n     * Setup browser adapter.\n     * @param {Object} config\n     */\n    constructor(config) {\n        super(config);\n\n        this.setHeaders({\n            Authorization: `Bearer ${config.publicKey}`,\n            'Content-Type': 'application/json',\n            'User-Agent': '@fleetbase/sdk;browser'\n        });\n    }\n\n    /**\n     * Updates the adapter headers.\n     *\n     * @param {Object} headers\n     */\n    setHeaders(headers = {}) {\n        this.headers = { ...this.headers, ...headers };\n\n        return this;\n    }\n\n    /**\n     * Parses the JSON returned by a network request\n     *\n     * @param  {Object} response A response from a network request\n     * @return {Object}          The parsed JSON, status from the response\n     *\n     * @return {Promise}\n     */\n    parseJSON(response) {\n        return new Promise((resolve, reject) => response\n            .json()\n            .then((json) => resolve({\n                statusText: response.statusText,\n                status: response.status,\n                ok: response.ok,\n                json,\n            }))\n            .catch(() => {\n                reject(new Error('Oops! Something went wrong when handling your request.'));\n            }));\n    }\n\n    /**\n     * The base request method\n     *\n     * @param {String} path\n     * @param {String} method\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    request(path, method = 'GET', data = {}, options = {}) {\n        return new Promise((resolve, reject) => fetch(options.url || `${this.host}/${this.namespace}/${path}`, {\n            method,\n            mode: options.mode || 'cors',\n            headers: new Headers({\n                ...(this.headers || {}),\n                ...(options.headers || {}),\n            }),\n            ...data,\n        })\n            .then(this.parseJSON)\n            .then((response) => {\n                if (response.ok) {\n                    return resolve(response.json);\n                }\n\n                return reject(new Error(response.json.errors ? response.json.errors[0] : response.statusText));\n            })\n            .catch((error) => {\n                reject(error);\n            }));\n    }\n\n    /**\n     * Makes a GET request with fetch\n     *\n     * @param {String} path\n     * @param {Object} query\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    get(path, query = {}, options = {}) {\n        const urlParams = !isBlank(query) ? new URLSearchParams(query).toString() : '';\n\n        return this.request(`${path}${urlParams ? `?${urlParams}` : ''}`, 'GET', {}, options);\n    }\n\n    /**\n     * Makes a POST request with fetch\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    post(path, data = {}, options = {}) {\n        return this.request(path, 'POST', { body: JSON.stringify(data) }, options);\n    }\n\n    /**\n     * Makes a PUT request with fetch\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    put(path, data = {}, options = {}) {\n        return this.request(path, 'PUT', { body: JSON.stringify(data) }, options);\n    }\n\n    /**\n     * Makes a DELETE request with fetch\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    delete(path, options = {}) {\n        return this.request(path, 'DELETE', {}, options);\n    }\n\n    /**\n     * Makes a PATCH request with fetch\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    patch(path, data = {}, options = {}) {\n        return this.request(path, 'PATCH', { body: JSON.stringify(data) }, options);\n    }\n}\n\nexport default BrowserAdapter;\n","import Adapter from '../adapter';\nimport { isBlank } from '../utils';\nimport { isArray } from '../utils/array';\nimport axios from 'axios';\n\nclass NodeAdapter extends Adapter {\n    constructor(config) {\n        super(config);\n\n        this.axios = axios.create({\n            baseURL: `${this.host}/${this.namespace}`,\n            headers: {\n                Authorization: `Bearer ${config.publicKey}`,\n                'Content-Type': 'application/json',\n                'User-Agent': '@fleetbase/sdk;node',\n            },\n        });\n    }\n\n    /**\n     * Updates the adapter headers.\n     *\n     * @param {Object} headers\n     */\n    setHeaders(headers = {}) {\n        const commonHeaders = this.axios.defaults.headers.common;\n        this.axios.defaults.headers.common = { ...commonHeaders, ...headers };\n\n        return this;\n    }\n\n    /**\n     * Tranform the response, and return the response data from axios.\n     *\n     * @param {AxiosResponse} response\n     * @returns {Object}\n     */\n    transform(response) {\n        return response.data;\n    }\n\n    /**\n     * Handles an erroneous request.\n     *\n     * @param {AxiosResponse} response\n     * @returns {Object}\n     */\n    handleError(error) {\n        if (error.response) {\n            const { data } = error.response;\n\n            if (isArray(data.errors)) {\n                throw new Error(data.errors[0]);\n            }\n\n            if (data.error) {\n                throw new Error(data.error);\n            }\n        }\n\n        throw error;\n    }\n\n    /**\n     * Makes a GET request with axios\n     *\n     * @param {String} path\n     * @param {Object} query\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    get(path, query = {}, options = {}) {\n        const urlParams = !isBlank(query) ? new URLSearchParams(query).toString() : '';\n\n        return this.axios\n            .get(`${path}${urlParams ? `?${urlParams}` : ''}`, options)\n            .then(this.transform.bind(this))\n            .catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a POST request with axios\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    post(path, data = {}, options = {}) {\n        return this.axios.post(path, data, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a PUT request with axios\n     *\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    put(path, data = {}, options = {}) {\n        return this.axios.put(path, data, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a DELETE request with axios\n     *\n     * @param {String} path\n     * @param {Object} query\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    delete(path, options = {}) {\n        return this.axios.delete(path, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n\n    /**\n     * Makes a PATCH request with axios\n     * @param {String} path\n     * @param {Object} data\n     * @param {Object} options\n     *\n     * @return {Promise}\n     */\n    patch(path, data = {}, options = {}) {\n        return this.axios.patch(path, data, options).then(this.transform.bind(this)).catch(this.handleError.bind(this));\n    }\n}\n\nexport default NodeAdapter;\n","import Adapter from '../adapter';\n\nclass EmberJsAdapter extends Adapter {}\n\nexport default EmberJsAdapter;\n","'use strict';\n\n/**\n * Javascript String\n *\n * instance\n * new String('hello_world').humanize().get() => \"Hello world\"\n *\n * instance\n * const string = new String();\n * string.humanize('hello_world').get() => \"Hello world\"\n * \n * no chain\n * new String('hello_world', false).humanize() => \"Hello world\"\n *\n * static\n * String.invoke('humanize', 'hello_world') => \"Hello world\"\n *\n * exports {}\n * humanize('hello_world') => \"Hello world\"\n */\n\nexport default class String {\n    constructor(string, chain = true) {\n        this.str = string;\n        this.chain = chain;\n    }\n\n    uncountableWords = ['equipment', 'information', 'rice', 'money', 'species', 'series', 'fish', 'sheep', 'moose', 'deer', 'news'];\n\n    pluralRules = [\n        [new RegExp('(m)an$', 'gi'), '$1en'],\n        [new RegExp('(pe)rson$', 'gi'), '$1ople'],\n        [new RegExp('(child)$', 'gi'), '$1ren'],\n        [new RegExp('^(ox)$', 'gi'), '$1en'],\n        [new RegExp('(ax|test)is$', 'gi'), '$1es'],\n        [new RegExp('(octop|vir)us$', 'gi'), '$1i'],\n        [new RegExp('(alias|status)$', 'gi'), '$1es'],\n        [new RegExp('(bu)s$', 'gi'), '$1ses'],\n        [new RegExp('(buffal|tomat|potat)o$', 'gi'), '$1oes'],\n        [new RegExp('([ti])um$', 'gi'), '$1a'],\n        [new RegExp('sis$', 'gi'), 'ses'],\n        [new RegExp('(?:([^f])fe|([lr])f)$', 'gi'), '$1$2ves'],\n        [new RegExp('(hive)$', 'gi'), '$1s'],\n        [new RegExp('([^aeiouy]|qu)y$', 'gi'), '$1ies'],\n        [new RegExp('(x|ch|ss|sh)$', 'gi'), '$1es'],\n        [new RegExp('(matr|vert|ind)ix|ex$', 'gi'), '$1ices'],\n        [new RegExp('([m|l])ouse$', 'gi'), '$1ice'],\n        [new RegExp('(quiz)$', 'gi'), '$1zes'],\n        [new RegExp('s$', 'gi'), 's'],\n        [new RegExp('$', 'gi'), 's'],\n    ];\n\n    singularRules = [\n        [new RegExp('(m)en$', 'gi'), '$1an'],\n        [new RegExp('(pe)ople$', 'gi'), '$1rson'],\n        [new RegExp('(child)ren$', 'gi'), '$1'],\n        [new RegExp('([ti])a$', 'gi'), '$1um'],\n        [new RegExp('((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$', 'gi'), '$1$2sis'],\n        [new RegExp('(hive)s$', 'gi'), '$1'],\n        [new RegExp('(tive)s$', 'gi'), '$1'],\n        [new RegExp('(curve)s$', 'gi'), '$1'],\n        [new RegExp('([lr])ves$', 'gi'), '$1f'],\n        [new RegExp('([^fo])ves$', 'gi'), '$1fe'],\n        [new RegExp('([^aeiouy]|qu)ies$', 'gi'), '$1y'],\n        [new RegExp('(s)eries$', 'gi'), '$1eries'],\n        [new RegExp('(m)ovies$', 'gi'), '$1ovie'],\n        [new RegExp('(x|ch|ss|sh)es$', 'gi'), '$1'],\n        [new RegExp('([m|l])ice$', 'gi'), '$1ouse'],\n        [new RegExp('(bus)es$', 'gi'), '$1'],\n        [new RegExp('(o)es$', 'gi'), '$1'],\n        [new RegExp('(shoe)s$', 'gi'), '$1'],\n        [new RegExp('(cris|ax|test)es$', 'gi'), '$1is'],\n        [new RegExp('(octop|vir)i$', 'gi'), '$1us'],\n        [new RegExp('(alias|status)es$', 'gi'), '$1'],\n        [new RegExp('^(ox)en', 'gi'), '$1'],\n        [new RegExp('(vert|ind)ices$', 'gi'), '$1ex'],\n        [new RegExp('(matr)ices$', 'gi'), '$1ix'],\n        [new RegExp('(quiz)zes$', 'gi'), '$1'],\n        [new RegExp('s$', 'gi'), ''],\n    ];\n\n    nonTitlecasedWords = ['and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at', 'by', 'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over', 'with', 'for'];\n\n    idSuffix = new RegExp('(_ids|_id)$', 'g');\n    underbar = new RegExp('_', 'g');\n    spaceOrUnderbar = new RegExp('[ _]', 'g');\n    uppercase = new RegExp('([A-Z])', 'g');\n    underbarPrefix = new RegExp('^_');\n\n    get() {\n        return this.str;\n    }\n\n    applyRules(str, rules, skip, override) {\n        if (override) {\n            str = override;\n        } else {\n            var ignore = skip.indexOf(str.toLowerCase()) > -1;\n            if (!ignore) {\n                for (var x = 0; x < rules.length; x++) {\n                    if (str.match(rules[x][0])) {\n                        str = str.replace(rules[x][0], rules[x][1]);\n                        break;\n                    }\n                }\n            }\n        }\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.pluralize('person')           -> 'people'\n        String.pluralize('octopus')          -> 'octopi'\n        String.pluralize('Hat')              -> 'Hats'\n        String.pluralize('person', 'guys')   -> 'guys'    \n    */\n    pluralize(str, plural = null) {\n        str = str || this.str;\n\n        return this.applyRules(str, this.pluralRules, this.uncountableWords, plural);\n    }\n\n    /*\n        String.singularize('person')         -> 'person'\n        String.singularize('octopi')         -> 'octopus'\n        String.singularize('hats')           -> 'hat'\n        String.singularize('guys', 'person') -> 'person'\n    */\n    singularize(str, singular) {\n        str = str || this.str;\n\n        return this.applyRules(str, this.singularRules, this.uncountableWords, singular);\n    }\n\n    /*\n        String.camelize('message_properties')        -> 'MessageProperties'\n        String.camelize('message_properties', true)  -> 'messageProperties'\n    */\n    camelize(str, lowFirstLetter) {\n        str = str || this.str;\n\n        let str_path = str.split('/');\n        for (var i = 0; i < str_path.length; i++) {\n            let str_arr = str_path[i].split('_');\n            let initX = lowFirstLetter && i + 1 === str_path.length ? 1 : 0;\n\n            for (let x = initX; x < str_arr.length; x++) {\n                str_arr[x] = str_arr[x].charAt(0).toUpperCase() + str_arr[x].substring(1);\n            }\n            str_path[i] = str_arr.join('');\n        }\n        str = str_path.join('::');\n\n        // fix\n        if (lowFirstLetter === true) {\n            let first = str.charAt(0).toLowerCase();\n            let last = str.slice(1);\n            str = first + last;\n        }\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.underscore('MessageProperties')       -> 'message_properties'\n        String.underscore('messageProperties')       -> 'message_properties'\n    */\n    underscore(str) {\n        str = str || this.str;\n\n        var str_path = str.split('::');\n        for (var i = 0; i < str_path.length; i++) {\n            str_path[i] = str_path[i].replace(this.uppercase, '_$1');\n            str_path[i] = str_path[i].replace(this.underbarPrefix, '');\n        }\n        str = str_path.join('/').toLowerCase();\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.humanize('message_properties')        -> 'Message properties'\n        String.humanize('message_properties')        -> 'message properties'\n    */\n    humanize(str, lowFirstLetter) {\n        str = str || this.str;\n\n        var str = str.toLowerCase();\n        str = str.replace(this.idSuffix, '');\n        str = str.replace(this.underbar, ' ');\n        if (!lowFirstLetter) {\n            str = this.capitalize(str);\n        }\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.capitalize('message_properties')      -> 'Message_properties'\n        String.capitalize('message properties')      -> 'Message properties'\n    */\n    capitalize(str) {\n        str = str || this.str;\n\n        str = str.toLowerCase();\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.dasherize('message_properties')       -> 'message-properties'\n        String.dasherize('message properties')       -> 'message-properties'\n    */\n    dasherize(str) {\n        str = str || this.str;\n\n        str = str.replace(this.spaceOrUnderbar, '-');\n        str = str.toLowerCase();\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.normify('message_properties')         -> 'Message Properties'\n        String.normify('message properties')         -> 'Message Properties'\n        Inflactor.normify('Message_propertyId', true)   -> 'Message Properties Id'\n    */\n    normify(str, allFirstUpper) {\n        str = str || this.str;\n\n        //var str = str.toLowerCase();\n        if (allFirstUpper === true) {\n            str = this.camelize(str);\n            str = this.underscore(str);\n        } else {\n            str = str.toLowerCase();\n        }\n\n        str = str.replace(this.underbar, ' ');\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++) {\n            var d = str_arr[x].split('-');\n            for (var i = 0; i < d.length; i++) {\n                if (this.nonTitlecasedWords.indexOf(d[i].toLowerCase()) < 0) {\n                    d[i] = this.capitalize(d[i]);\n                }\n            }\n            str_arr[x] = d.join('-');\n        }\n        str = str_arr.join(' ');\n        str = str.substring(0, 1).toUpperCase() + str.substring(1);\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.demodulize('Message::Bus::Properties')    -> 'Properties'\n    */\n    demodulize(str) {\n        str = str || this.str;\n\n        var str_arr = str.split('::');\n        str = str_arr[str_arr.length - 1];\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.tableize('MessageBusProperty')    -> 'message_bus_properties'\n    */\n    tableize(str) {\n        str = str || this.str;\n\n        str = this.pluralize(this.underscore(str));\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.classify('message_bus_properties')    -> 'MessageBusProperty'\n    */\n    classify(str) {\n        str = str || this.str;\n\n        str = this.singularize(this.camelize(str));\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.foreignKey('MessageBusProperty')       -> 'message_bus_property_id'\n        String.foreignKey('MessageBusProperty', true) -> 'message_bus_propertyid'\n    */\n    foreignKey(str, dropIdUbar = false) {\n        str = str || this.str;\n\n        str = this.underscore(this.demodulize(str)) + (dropIdUbar ? '' : '_') + 'id';\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /*\n        String.ordinalize('the 1 pitch')     -> 'the 1st pitch'\n    */\n    ordinalize(str) {\n        str = str || this.str;\n\n        var str_arr = str.split(' ');\n        for (var x = 0; x < str_arr.length; x++) {\n            var i = parseInt(str_arr[x]);\n            if (i === NaN) {\n                var ltd = str_arr[x].substring(str_arr[x].length - 2);\n                var ld = str_arr[x].substring(str_arr[x].length - 1);\n                var suf = 'th';\n                if (ltd != '11' && ltd != '12' && ltd != '13') {\n                    if (ld === '1') {\n                        suf = 'st';\n                    } else if (ld === '2') {\n                        suf = 'nd';\n                    } else if (ld === '3') {\n                        suf = 'rd';\n                    }\n                }\n                str_arr[x] += suf;\n            }\n        }\n        str = str_arr.join(' ');\n\n        // set str\n        this.str = str;\n\n        if (this.chain === true) {\n            return this;\n        }\n\n        // return result\n        return str;\n    }\n\n    /**\n     * @method invoke\n     **/\n    static invoke() {\n        const argz = Object.values(arguments);\n        const instance = new String(null, false);\n        const method = arguments[0];\n        argz.shift();\n\n        if (typeof instance[method] === 'function') {\n            return instance[method](...argz);\n        }\n\n        return null;\n    }\n}\n\nconst pluralize = function() {\n    const argz = ['pluralize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst singularize = function() {\n    const argz = ['singularize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst humanize = function() {\n    const argz = ['humanize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst underscore = function() {\n    const argz = ['underscore', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst camelize = function() {\n    const argz = ['camelize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst capitalize = function() {\n    const argz = ['capitalize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst dasherize = function() {\n    const argz = ['dasherize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst normify = function() {\n    const argz = ['normify', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst demodulize = function() {\n    const argz = ['demodulize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst tableize = function() {\n    const argz = ['tableize', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst classify = function() {\n    const argz = ['classify', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nconst foreignKey = function() {\n    const argz = ['foreignKey', ...arguments];\n\n    return String.invoke(...argz);\n};\n\nexport {\n    pluralize,\n    singularize,\n    humanize,\n    underscore,\n    camelize,\n    capitalize,\n    dasherize,\n    normify,\n    demodulize,\n    tableize,\n    classify,\n    foreignKey\n}","import { Contact, Driver, Entity, Order, Payload, Place, TrackingStatus, Vehicle, Vendor, Waypoint, Zone, ServiceArea, ServiceRate, ServiceQuote } from './resources';\nimport { BrowserAdapter, NodeAdapter, EmberJsAdapter } from './adapters';\nimport { pluralize, singularize } from './utils/string';\n\nconst resources = {\n    Contact,\n    Driver,\n    Entity,\n    Order,\n    Payload,\n    Place,\n    TrackingStatus,\n    Vehicle,\n    Vendor,\n    Waypoint,\n    Zone,\n    ServiceArea,\n    ServiceRate,\n    ServiceQuote,\n};\n\nconst adapters = {\n    BrowserAdapter,\n    NodeAdapter,\n    EmberJsAdapter,\n};\n\nclass Resolver {\n    constructor() {\n        this.resources = resources;\n        this.adapters = adapters;\n\n        return this.lookup(...arguments);\n    }\n\n    lookup(type, className) {\n        const key = pluralize(type);\n        const params = [...arguments].slice(2);\n\n        if (!this[key]) {\n            throw new Error('Attempted to resolve invalid type');\n        }\n\n        if (!this[key][className]) {\n            throw new Error(`No ${singularize(type)} named ${className} to resolve`);\n        }\n\n        return new this[key][className](...params);\n    }\n}\n\nconst lookup = function () {\n    return new Resolver(...arguments);\n};\n\nexport { Resolver, lookup };\nexport default Resolver;\n","import { lookup } from './resolver';\nimport { pluralize, classify } from './utils/string';\nimport { isArray } from './utils/array';\nimport { Collection, detectAdapter, isResource, StoreActions } from './utils';\nimport { set, isCallable, invoke } from './utils/object';\n\nconst extendStoreActions = (store, actions = []) => {\n    store.actions = isArray(actions) ? actions : [actions];\n\n    if (isArray(actions)) {\n        for (let i = 0; i < actions.length; i++) {\n            const action = actions[i];\n\n            store.extendActions(action);\n        }\n        return;\n    }\n\n    if (actions instanceof StoreActions) {\n        actions.extend(store);\n    }\n\n    return store;\n};\n\nconst afterFetch = (store, json) => {\n    if (typeof store.options.onAfterFetch === 'function') {\n        store.options.onAfterFetch(json);\n    }\n\n    if (isArray(json)) {\n        const serialized = [];\n\n        for (let i = 0; i < json.length; i++) {\n            serialized.push(store.afterFetch(json[i]));\n        }\n\n        return new Collection(...serialized);\n    }\n\n    const resourceInstance = store.serialize(json);\n    return store.deposit(resourceInstance);\n};\n\nclass Store {\n    constructor(resource, adapter, options = {}) {\n        this.resource = resource;\n        this.adapter = adapter || detectAdapter();\n        this.namespace = pluralize(resource);\n        this.storage = new Collection();\n        this.options = options;\n        this.extendActions(options.actions);\n    }\n\n    extendActions(actions = []) {\n        return extendStoreActions(this, actions);\n    }\n\n    deposit(resourceInstance) {\n        // this.storage[this.namespace].pushObject(resourceInstance);\n\n        return resourceInstance;\n    }\n\n    serialize(json) {\n        return lookup('resource', classify(this.resource), json, this.adapter);\n    }\n\n    afterFetch(json) {\n        return afterFetch(this, json);\n    }\n\n    create(attributes = {}, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.post(`${this.namespace}`, attributes, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    update(id, attributes = {}, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.put(`${this.namespace}/${id}`, attributes, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    findRecord(id, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}/${id}`, {}, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    findAll(options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}`, {}, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    query(query = {}, options = {}) {\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}`, query, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    queryRecord(query = {}, options = {}) {\n        query.single = true;\n\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.get(`${this.namespace}`, query, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n\n    destroy(record, options = {}) {\n        const id = isResource(record) ? record.getAttribute('id') : record;\n\n        return new Promise(async (resolve, reject) => {\n            const response = await this.adapter.delete(`${this.namespace}/${id}`, {}, options).then(this.afterFetch.bind(this)).catch(reject);\n\n            resolve(response);\n        });\n    }\n}\n\nexport default Store;\n\nexport { extendStoreActions, afterFetch };\n","import Store from './store';\nimport Resource from './resource';\nimport { Contact, Driver, Entity, Order, Payload, Place, TrackingStatus, Vehicle, Vendor, Waypoint, Zone, ServiceArea, ServiceRate, ServiceQuote, Organization } from './resources';\nimport { BrowserAdapter, NodeAdapter, EmberJsAdapter, Adapter } from './adapters';\nimport { isNodeEnvironment, detectAdapter, isLatitude, isLongitude, Point, isResource, GoogleAddress, Collection, StoreActions } from './utils';\nimport { pluralize, singularize, classify, dasherize, camelize } from './utils/string';\nimport { extendStoreActions } from './store';\nimport { orderActions } from './resources/order';\nimport { driverActions } from './resources/driver';\n\n/**\n * // instance\n * const fleetbase = new Fleetbase();\n *\n * const contact = fleetbase.contacts.create({\n * \t\tname: 'Ron',\n * \t\tphone: '+65 9999 8888'\n * });\n *\n * constact.update({ name: 'Hollywood Ron' });\n *\n * // export\n * import { Contact } from '@fleetbase/sdk';\n *\n * const contact = new Contact({\n * \t\tname: 'Ron',\n * \t\tphone: '+65 9999 8888'\n * });\n *\n * contact.save();\n */\n\nexport default class Fleetbase {\n    /**\n     * Builds an instance of the Fleetbase SDK\n     *\n     * @param  {String}  publicKey  The public key issued\n     * @param  {Object}  config     The version of resource to access\n     * @param  {Boolean} debug      Debug mode for SDK\n     * @return {Fleetbase}          Instance\n     */\n    constructor(publicKey, config = {}, debug = false) {\n        this.version = config.version ?? 'v1';\n        this.options = {\n            version: this.version,\n            host: config.host ?? 'https://api.fleetbase.io',\n            namespace: config.namespace ?? this.version,\n            debug,\n            publicKey,\n        };\n\n        if (typeof publicKey !== 'string' || publicKey.length === 0) {\n            throw new Error('⚠️ Invalid public key given to Fleetbase SDK');\n        }\n\n        if (!isNodeEnvironment() && publicKey.toLowerCase().startsWith('$')) {\n            throw new Error('Secret key provided. You must use a public key with Fleetbase Javascript SDK!');\n        }\n\n        this.adapter = config.adapter || detectAdapter(this.options);\n\n        this.orders = new Store('order', this.adapter).extendActions(orderActions);\n        this.entities = new Store('entity', this.adapter);\n        this.places = new Store('place', this.adapter);\n        this.drivers = new Store('driver', this.adapter).extendActions(driverActions);\n        this.vehicles = new Store('vehicle', this.adapter);\n        this.vendors = new Store('vendor', this.adapter);\n        this.contacts = new Store('contact', this.adapter);\n    }\n\n    static newInstance() {\n        return new Fleetbase(...arguments);\n    }\n\n    setAdapter(adapter) {\n        this.adapter = adapter;\n    }\n\n    getAdapter() {\n        return this.adapter;\n    }\n}\n\nexport {\n    Store,\n    Resource,\n    Contact,\n    Driver,\n    Entity,\n    Order,\n    Payload,\n    Place,\n    TrackingStatus,\n    Vehicle,\n    Vendor,\n    Waypoint,\n    Zone,\n    ServiceArea,\n    ServiceRate,\n    ServiceQuote,\n    Organization,\n    BrowserAdapter,\n    NodeAdapter,\n    EmberJsAdapter,\n    Adapter,\n    isNodeEnvironment,\n    isLatitude,\n    isLongitude,\n    Point,\n    isResource,\n    GoogleAddress,\n    Collection,\n    StoreActions,\n    extendStoreActions,\n    pluralize,\n    singularize,\n    classify,\n    dasherize,\n    camelize,\n};\n"],"names":["isArray","Array","replace","array","start","deleteCount","items","length","splice","i","chunk","slice","isCollection","arr","identityFunction","item","mixed","Collection","objectAt","index","iter","key","value","arguments","Boolean","findIndex","predicate","startAt","len","find","callback","target","bind","undefined","any","every","cb","indexOf","val","withNaNCheck","insertAt","this","indexes","map","idx","_this2","object","methodName","args","ret","forEach","push","_item$methodName","filter","sortKeys","sort","a","b","propA","propB","compareValue","compare","seen","Set","getter","get","has","add","uniqBy","includes","removeAt","obj","objects","toArray","reverse","clear","loc","removeObject","pushObject","_this3","addObject","isEmpty","none","size","objectType","isBlank","test","isLatitude","coordinate","isFinite","Math","abs","isLongitude","isResource","record","Resource","isPhone","phone","isNodeEnvironment","process","_typeof","_process","env","release","name","search","window","navigator","product","detectAdapter","options","lookup","GoogleAddress","place","geometry","components","parseComponents","attributes","parseProperties","address_components","reduce","acc","data","types","type","streetNumber","streetName","coordinates","location","Object","values","city","or","county","stateShort","stateLong","countryShort","country","countryLong","postalCode","address","join","keys","pkey","short","short_name","long_name","Point","latitude","longitude","coorindates","lat","lng","serialize","json","getResolved","func","path","resolved","current","isObject","isFunction","pathArray","split","newPath","set","iterations","StoreActions","actions","bindTo","binding","action","fn","adapter","resource","dirtyAttributes","changes","isLoading","isSaving","isDestroying","isReloading","version","setAdapter","store","Store","onAfterFetch","syncAttributes","_this$options","getAttribute","mergeAttributes","setFlags","create","then","response","_this","update","id","destroy","findRecord","_this4","reset","flags","state","validFlags","flag","Error","attribues","getAttributes","onlyDirty","savedirty","dirtyAttributeKeys","isAttributeFilled","Date","hasAttributes","isNew","isLoaded","property","_this5","call","setAttributes","previousValue","changedAt","setAttribute","attribute","defaultValue","properties","attributeKeys","prop","hasAttribute","_this6","_value","_value2","modelAttributes","orderActions","getDistanceAndTime","params","namespace","getNextActivity","dispatch","post","afterFetch","updateActivity","setDestination","destinationId","captureQrCode","subjectId","captureSignature","complete","cancel","Order","isStarted","isCanceled","isCompleted","Payload","entity","waypoints","Entity","Place","_this$getAttribute","_this$getAttribute2","owner","googleAddress","street1","street2","province","postal_code","neighborhood","district","building","security_access_code","Waypoint","TrackingStatus","Vehicle","driverActions","login","identity","password","verifyCode","code","track","retrieve","syncDevice","Driver","Vendor","Contact","Zone","ServiceArea","ServiceRate","ServiceQuote","Organization","Adapter","config","host","headers","BrowserAdapter","setHeaders","Authorization","publicKey","Promise","resolve","reject","statusText","status","ok","method","fetch","url","mode","Headers","parseJSON","errors","error","query","urlParams","URLSearchParams","toString","request","body","JSON","stringify","NodeAdapter","axios","baseURL","commonHeaders","defaults","common","transform","handleError","put","patch","EmberJsAdapter","String","string","chain","RegExp","str","rules","skip","override","toLowerCase","x","match","plural","applyRules","pluralRules","uncountableWords","singular","singularRules","lowFirstLetter","str_path","str_arr","charAt","toUpperCase","substring","first","last","uppercase","underbarPrefix","idSuffix","underbar","capitalize","spaceOrUnderbar","allFirstUpper","camelize","underscore","d","nonTitlecasedWords","pluralize","singularize","dropIdUbar","demodulize","NaN","parseInt","ltd","ld","suf","argz","instance","shift","invoke","dasherize","classify","resources","adapters","Resolver","className","extendStoreActions","extend","extendActions","storage","resourceInstance","serialized","deposit","single","_this7","Fleetbase","debug","startsWith","orders","entities","places","drivers","vehicles","vendors","contacts"],"mappings":"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"}